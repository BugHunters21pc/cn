BASIC TCP

SERVER

import socket

host = "localhost"
port = 4448

server = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
server.bind((host,port))
server.listen(10)

client, addr = server.accept()
print(f"Connected {addr[0]}:{addr[1]}")

string = client.recv(1024)
string = string.decode('utf-8')
print(f"Client : {string}")

CLIENT

import socket

host = "localhost"
port = 4448

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.connect((host,port))

print("Connected to the server...")
string = input("Client :")
server.send(bytes(string,'utf-8'))

CHAT APPLICATION TCP

SERVER:

import time, socket, sys
 
new_socket = socket.socket()
host_name = socket.gethostname()
s_ip = socket.gethostbyname(host_name)
 
port = 8080
 
new_socket.bind(('localhost', port))
print("Binding successful!")
print("This is your IP: ", s_ip)
 
name = input('Enter name: ')
 
new_socket.listen(1) 
 
conn, add = new_socket.accept()
 
print("Received connection from ", add[0])
print('Connection Established. Connected From: ',add[0])
 
client = (conn.recv(1024)).decode()
print(client + ' has connected.')
 
conn.send(name.encode())
while True:
    message = input('Me : ')
    conn.send(message.encode())
    message = conn.recv(1024)
    message = message.decode()
    print(client, ':', message)
    
CLIENT

import time, socket, sys
 
socket_server = socket.socket()
server_host = socket.gethostname()
ip = socket.gethostbyname(server_host)
sport = 8080
 
print('This is your IP address: ',ip)
server_host = input('Enter friend\'s IP address:')
name = input('Enter Friend\'s name: ')
 
 
socket_server.connect(('localhost',sport))
 
socket_server.send(name.encode())
server_name = socket_server.recv(1024)
server_name = server_name.decode()
 
print(server_name,' has joined...')
while True:
    message = (socket_server.recv(1024)).decode()
    print(server_name, ":", message)
    message = input("Me : ")
    socket_server.send(message.encode())  
    
MSG == BYE GOOD BYE ELSE OK

SERVER

import socket

def main():
    port = 35000
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    host = socket.gethostname()
    myIP = socket.gethostbyname(host)
    print("host",host,myIP)
    s.bind((host,port))
    s.listen(5)
    print("Listening on "+str(port)+" ....")
    flag = True
    while True:
        c,c_addr = s.accept()
        print("Connection recieved from ",c_addr,c)
        while flag:
            c.send(b"Please enter the message to the server: ")
            msg = c.recv(1024).decode()
            print("Message from client: "+msg)
            if msg == "Bye":
                c.send(b"Goodbye")
                c.send(b"Closing connection")
                flag= False
            else:
                c.send(b"Ok")
                flag= True
    c.close()

if __name__ == "__main__":
    main()

CLIENT

import socket

def main():
    port = 35000
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    host = socket.gethostname()
    s.connect((host,port))
    flag = True
    while flag:
        msg = s.recv(1024).decode()
        c_msg = input(msg)
        s.send(bytes(c_msg,"UTF-8"))
        msg = s.recv(1024).decode()
        print("Server replied: "+msg)
        if msg == "Goodbye":
            flag = False
        else:
            flag = True
    s.close()

if __name__ == "__main__":
    main()

VIGENERE CIPHER

SERVER VIGENERE :

import socket
    
def decrypt_vigenere(data):    
    ciphertext = data[0]
    key = data[1]
    plaintext = ""
    for i in range(len(ciphertext)):
        plaintext += chr((ord(ciphertext[i])-ord(key[i])-65)%26+65)
    print("PLAINTEXT :",plaintext)

host = "localhost"
port = 1234

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((host,port))
server.listen(10)

client,addr = server.accept()
data = client.recv(1024)
data = data.decode('utf-8')

data = data.split()
    
decrypt_vigenere(data)

CLIENT VIG:

import socket

def encrypt_vigenere(data):
    plaintext = data[0]
    key = data[1]
    ciphertext = ""
    for i in range(len(plaintext)):
        ciphertext += chr((ord(plaintext[i])+ord(key[i])-65)%26+65)
    print("CIPHERTEXT :",ciphertext)
    text = ciphertext +" " + data[1]
    server.send(text.encode('utf-8'))

host = "localhost"
port = 1234

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.connect((host,port))

data = input("ENTER THE TEXT KEY :")
data = data.split()
data[1] = (data[1] * (len(data[0])//len(data[1]) +1))[:len(data[0])]
print(data[1])
encrypt_vigenere(data)

DONE BY H BANK

BANK CLIENT

import socket,sys

client=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

try:
    client.connect(("localhost",9999))
except socket.error as e:
    print(str(e))

print("[+] connected to bank server")

opt=True

while opt:
    name=input("Enter the name of your bank account :").strip(",. '/")
    client.send(name.encode())
    response=client.recv(1024).decode()
    if(response=="Failed to enter the bank :("):
        print(response)
        client.close()
        sys.exit()
    print(response)

    (choice,amt)=map(str,input("Enter choice and amt ([- 100]- deducts 100 and [+ 100]- adds 100) :").split())
    #print(choice)

    client.send(choice.encode())
    client.send(amt.encode())

    res=client.recv(1024).decode()
    print(res)
    
SERVER FOR BANK

import socket,threading,sys

server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

try:
    server.bind(("10.1.66.254",9999))
except socket.error as e:
    print(str(e))

print("[+] waiting for connection")

def funHandle(c,addr):
    opt=True
    amt=0
    print(f"[+] {addr[0]} has connected to the server")
    while(opt):
        name=c.recv(1024).decode()
        l1=[]
        f=open("bank.csv","r+")
        for i in f.readlines():
            if(len(i)!=0):
                l1.append(i[0:i.index(",")])
            
        if(name in l1):
            status="Success :)"
            c.send(status.encode())
        else:
            status="Failed to enter the bank :("
            c.send(status.encode())
            sys.exit()
        f.close()
        
        choice=c.recv(1024).decode()
        amt=c.recv(1024).decode()
        
        print(choice,amt)
        if(choice=="-"):
            l=[]
            
            f=open("bank.csv","r")
            l=f.readlines()
            f.close()
            #print(l)
            
            for i in range(len(l)):
                if(l[i][0:l[i].index(",")]==name):
                    print(l[i])
                    l[i]=l[i].replace(l[i][l[i].index(",")+1:l[i].index("\n")],str(int(l[i][l[i].index(",")+1:])-int(amt)))
                    rem=l[i][l[i].index(",")+1:]
                    response=f"The amount remaining after deducting {amt} is {rem}"
                    c.send(response.encode())
                    break
            #print(l)
            f=open("bank.csv","w")
            for i in l:
                f.write(i)
            f.close()
                
        elif(choice=="+"):
            
            l=[]
            
            f=open("bank.csv","r")
            l=f.readlines()
            f.close()
            #print(l)
            
            for i in range(len(l)):
                if(l[i][0:l[i].index(",")]==name):
                    print(l[i])
                    l[i]=l[i].replace(l[i][l[i].index(",")+1:l[i].index("\n")],str(int(l[i][l[i].index(",")+1:])+int(amt)))
                    rem=l[i][l[i].index(",")+1:]
                    response=f"The amount remaining after adding {amt} is {rem}"
                    c.send(response.encode())
                    break
            #print(l)
            f=open("bank.csv","w")
            for i in l:
                f.write(i)
            f.close()

def start():
        server.listen(5)
        while True:
            c,addr=server.accept()
            thread=threading.Thread(target=funHandle,args=(c,addr))
            thread.start()


start()

BANK MULTITHREADED BY PREETHAM :

CLIENT

import socket,sys

client=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

try:
    client.connect(("localhost",9999))
except socket.error as e:
    print(str(e))

print("[+] connected to bank server")

opt=True

while opt:
    name=input("Enter the name of your bank account :").strip(",. '/")
    client.send(name.encode())
    response=client.recv(1024).decode()
    if(response=="Failed to enter the bank :("):
        print(response)
        client.close()
        sys.exit()
    print(response)

    (choice,amt)=map(str,input("Enter choice and amt ([- 100]- deducts 100 and [+ 100]- adds 100) :").split())
    #print(choice)

    client.send(choice.encode())
    client.send(amt.encode())

    res=client.recv(1024).decode()
    print(res)
    
SERVER :

import socket,threading,sys

server=socket.socket(socket.AF_INET,socket.SOCK_STREAM)

try:
    server.bind(("localhost",9999))
except socket.error as e:
    print(str(e))

print("[+] waiting for connection")

def funHandle(c,addr):
    opt=True
    amt=0
    print(f"[+] {addr[0]} has connected to the server")
    while(opt):
        name=c.recv(1024).decode()
        l1=[]
        f=open("bank.csv","r+")
        for i in f.readlines():
            if(len(i)!=0):
                l1.append(i[0:i.index(",")])
            
        if(name in l1):
            status="Success :)"
            c.send(status.encode())
        else:
            status="Failed to enter the bank :("
            c.send(status.encode())
            sys.exit()
        f.close()
        
        choice=c.recv(1024).decode()
        amt=c.recv(1024).decode()
        
        print(choice,amt)
        if(choice=="-"):
            l=[]
            
            f=open("bank.csv","r")
            l=f.readlines()
            f.close()
            #print(l)
            
            for i in range(len(l)):
                if(l[i][0:l[i].index(",")]==name):
                    print(l[i])
                    l[i]=l[i].replace(l[i][l[i].index(",")+1:l[i].index("\n")],str(int(l[i][l[i].index(",")+1:])-int(amt)))
                    rem=l[i][l[i].index(",")+1:]
                    response=f"The amount remaining after deducting {amt} is {rem}"
                    c.send(response.encode())
                    break
            #print(l)
            f=open("bank.csv","w")
            for i in l:
                f.write(i)
            f.close()
                
        elif(choice=="+"):
            
            l=[]
            
            f=open("bank.csv","r")
            l=f.readlines()
            f.close()
            #print(l)
            
            for i in range(len(l)):
                if(l[i][0:l[i].index(",")]==name):
                    print(l[i])
                    l[i]=l[i].replace(l[i][l[i].index(",")+1:l[i].index("\n")],str(int(l[i][l[i].index(",")+1:])+int(amt)))
                    rem=l[i][l[i].index(",")+1:]
                    response=f"The amount remaining after adding {amt} is {rem}"
                    c.send(response.encode())
                    break
            #print(l)
            f=open("bank.csv","w")
            for i in l:
                f.write(i)
            f.close()

def start():
        server.listen(5)
        while True:
            c,addr=server.accept()
            thread=threading.Thread(target=funHandle,args=(c,addr))
            thread.start()


start()
